import styled from '@emotion/styled'

import icons from '@src/icons';

const MIN_WIDTH = 'min-width: 800px;';
const MIN_HEIGHT = 'min-height: 600px;';

const DEFAULT_ICON_STYLE = `
  width: 4vh;
  height: 4vh;
  min-width: 4vh;
  min-height: 4vh;
  margin: 0 0.5vw;
  align-self: center;
  background-repeat: no-repeat;
  background-size: contain;
`;

const DEFAULT_ICON_BUTTON_STYLE = `
  ${DEFAULT_ICON_STYLE}
  width: 8vh;
  height: 8vh;
  min-width: 8vh;
  min-height: 8vh;
  margin: 1vh 1vw;

  &:hover {
    cursor: pointer;
    width: 10vh;
    height: 10vh;
    min-width: 10vh;
    min-height: 10vh;
  }
`;

const DEFAULT_DIMENSION = `
  ${MIN_WIDTH}
  ${MIN_HEIGHT}
`;

const DEFAULT_STYLE = `
  font-size: 4vh;
  padding: 1vh 1vw;
`;

const Wrapper = styled.div`
  ${DEFAULT_DIMENSION}
  ${DEFAULT_STYLE}
  display: flex;
  flex-direction: column;
  align-items: center;
`;

const FieldWrapper = styled.div`
  ${DEFAULT_STYLE}
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: center;
`;

const MarkerInfoWrapper = styled.div`
  min-width: 150px;
  min-height: 100px;
  display: flex;
  flex-direction: column;
  align-items: center;
`;

const ExpandableButtonWrapper = styled.span`
  width: 10vh;
  height: 10vh;
  min-width: 10vh;
  min-height: 10vh;
  display: flex;
  align-self: center;
  justify-content: center;

  ${props => {
    if(props.disabled) {
      return `
        & > ${Button}:hover {
          width: 8vh;
          height: 8vh;
          min-width: 8vh;
          min-height: 8vh;
        }

        & > ${IconButton}:hover {
          width: 4vh;
          height: 4vh;
          min-width: 4vh;
          min-height: 4vh;
        }
      `;
    }
  }}
`;

const Header = styled.div`
  ${DEFAULT_STYLE}
  font-weight: bold;
  font-size: larger;
`;

const MarkerInfoHeader = styled.div`
  ${DEFAULT_STYLE}
  font-weight: bold;
  font-size: 2.5vh;
`;

const MarkerInfoField = styled.div`
  ${DEFAULT_STYLE}
  font-size: 2vh;
  padding: 0 1vw 1vh;
`;

const Status = styled.div`
  ${DEFAULT_STYLE}
  font-size: smaller;
`;

const Label = styled.div`
  ${DEFAULT_STYLE}
  font-size: smaller;
  margin-top: 3vh;
`;

const ErrorLabel = styled.div`
  ${DEFAULT_STYLE}
  font-size: smaller;
  color: #ED7899;
`;

const SubLabel = styled.div`
  font-size: small;
  color: #95A5A6;
`;

const Input = styled.input`
  ${DEFAULT_STYLE}
  border: 1px solid;
`;

const Link = styled.span`
  font-weight: bold;
  color: #72CAAF;
  text-decoration: underline;

  &:hover {
    cursor: pointer;
    color: #8D6C9F;
  }
`;

const Button = styled.span`
  ${DEFAULT_ICON_BUTTON_STYLE}
  background-image: url(${props => props.icon});

  ${props => props.disabled && `
    &:hover {
      cursor: not-allowed;
    }
  `}
`;

const SelectedIcon = styled.span`
  ${DEFAULT_ICON_STYLE}

  ${props => props.selected && `
    background-image: url(${icons.SELECTED});
  `}
`;

const ErrorIcon = styled.span`
  ${DEFAULT_ICON_STYLE}
  width: 8vh;
  height: 8vh;
  min-width: 8vh;
  min-height: 8vh;
  background-image: url(${icons.ERROR});
`;

const IconButton = styled.span`
  ${DEFAULT_ICON_STYLE}
  margin: 1vh 1vw;
  background-image: url(${props => props.icon});

  &:hover {
    cursor: pointer;
    width: 6vh;
    height: 6vh;
  }
`;

const List = styled.ol`
  display: flex;
  flex-direction: column;
  margin: 0px;
  padding: 0px;
`;

const ListItem = styled.ul`
  margin: 0 0 0.5vh 0;
  padding: 0px;
  display: flex;
  align-items: center;

  &:hover {
    cursor: pointer;
  }

  ${FieldWrapper} {
    padding-top: 0px;
    padding-bottom: 0px;
    justify-content: initial;
  }

  ${Label} {
    margin: 0px;
    padding-top: 0px;
    padding-bottom: 0px;
  }

  ${SubLabel} {
    margin-left: 7vh;
  }
`;

const ListPanelWrapper = styled.div`
  min-width: 400px;
  max-width: 400px;
  display: flex;
  flex-direction: column;
  font-size: smaller;
  margin-right: 1vw;
  height: 75vh;
  overflow-x: hidden;

  ${List} {
    padding-bottom: 1vh;
  }

  ${ListItem} {
    flex-direction: column;
    align-items: flex-start;
    padding-bottom: 1vh;
  }

  ${FieldWrapper} {
    min-width: none;
  }
`;

const LevelLabel = styled.span`
  padding-right: 1vw;
  color: ${props => getThresholdLabelColor(props.level)};
`;

const getThresholdLabelColor = (level) => {
  if(level > 0) {
    return '#ED7899';
  } else if(level == 0) {
    return '#F6D397';
  } else {
    return '#72CAAF';
  }
};

// HACK!
// the & > div > div below is forcefully targeting
//   the elements generated by google-maps-react component
const PanelWrapper = styled.div`
  ${DEFAULT_STYLE}
  min-width: 900px;
  max-width: 900px;
  display: flex;
  flex-direction: row;
  overflow: hidden;

  & > div > div {
    width: 33vw !important;
    min-width: 500px !important;
    height: 75vh !important;
    min-height: 500px !important;
  }
`;

const Table = styled.table`
  font-size: medium;
  margin: 1vh 1vw;
  border-collapse: collapse;
`;

const Row = styled.tr`
  &:nth-of-type(odd) {
    background-color: #F9E3AE;
  }

  &:first-of-type {
    font-size: larger;
    background-color: #72CAAF;
  }
`;

const Column = styled.td`
  border-width: 1px 0;
  border-style: solid;
  padding: 1vh 1vw;
  min-width: 75px;
  max-width: 200px;
  max-height: 30px;

  &:first-of-type {
    border-left: 1px;
    border-style: solid;
  }

  &:last-of-type {
    border-right: 1px;
    border-style: solid;
  }
`;

export {
  Wrapper,
  FieldWrapper,
  PanelWrapper,
  ListPanelWrapper,
  MarkerInfoWrapper,
  Header,
  MarkerInfoHeader,
  MarkerInfoField,
  ExpandableButtonWrapper,
  Status,
  Label,
  ErrorLabel,
  SubLabel,
  LevelLabel,
  Input,
  List,
  ListItem,
  Link,
  Button,
  IconButton,
  SelectedIcon,
  ErrorIcon,
  Table,
  Row,
  Column
};